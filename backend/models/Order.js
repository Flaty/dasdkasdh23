// backend/models/Order.js
import mongoose from 'mongoose';

const OrderSchema = new mongoose.Schema({
  // üî• –ù–û–í–û–ï –ü–û–õ–ï: –ö–æ—Ä–æ—Ç–∫–∏–π, —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π ID –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
  publicId: {
    type: String,
    required: true,
    unique: true,
    index: true, // –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
  },

  // üóëÔ∏è –£–î–ê–õ–ï–ù–û –ü–û–õ–ï: id: String, - –æ–Ω–æ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ.
  // MongoDB —Å–∞–º–∞ —Å–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π _id, –∫–æ—Ç–æ—Ä—ã–π –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–∏ —Å–∏—Å—Ç–µ–º—ã.

  // --- –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –±—ã–ª–∏ ---
  userId: { type: Number, required: true },
  username: String,
  link: String,
  category: String,
  shipping: String,
  price: Number,
  status: {
    type: String,
    enum: [
      'pending',          // –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
      'awaiting_payment', // –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã
      'paid',             // –û–ø–ª–∞—á–µ–Ω, –≤—ã–∫—É–ø–∞–µ—Ç—Å—è
      'to_warehouse',     // –ï–¥–µ—Ç –Ω–∞ —Å–∫–ª–∞–¥
      'at_warehouse',     // –ù–∞ —Å–∫–ª–∞–¥–µ
      'to_moscow',        // –ï–¥–µ—Ç –≤ –ú–æ—Å–∫–≤—É
      'in_moscow',        // –í –ú–æ—Å–∫–≤–µ
      'shipped_cdek',     // –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –°–î–≠–ö
      'ready_for_pickup', // –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ
      'completed',        // –ó–∞–≤–µ—Ä—à–µ–Ω
      'rejected'          // –û—Ç–∫–ª–æ–Ω–µ–Ω
    ],
    default: 'pending'
  },
  deliveryType: { type: String, enum: ['address', 'pickup'], default: 'pickup' },
  city: String,
  street: String,
  fullName: String,
  phone: String,
  pickupCode: String,
  pickupAddress: String,
}, {
  // ‚ú® –£–õ–£–ß–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –æ–ø—Ü–∏—é Mongoose.
  // –û–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–∏—Ç –∏ –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—è–º–∏ createdAt –∏ updatedAt.
  timestamps: true
});

// –ò—Å–ø–æ–ª—å–∑—É–µ–º mongoose.models –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –ø—Ä–∏ hot-reload
export default mongoose.models.Order || mongoose.model('Order', OrderSchema);