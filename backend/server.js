// backend/server.js
import mongoose from "mongoose";
import app, { bot, logger } from './app.js';

import Order from './models/Order.js';
import { Markup } from 'telegraf';
import { statusLabels, escapeMarkdown } from './utils/botHelpers.js';

const { MANAGER_CHAT_ID, WEBAPP_URL, JWT_SECRET, DATABASE_URL, PORT = 3001 } = process.env;

if (!JWT_SECRET || !bot.token || !MANAGER_CHAT_ID) {
  logger.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env!");
  process.exit(1);
}

mongoose.connect(DATABASE_URL || "mongodb://127.0.0.1:27017/orders")
  .then(() => logger.info("‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞"))
  .catch((err) => logger.error({ err }, "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB"));
mongoose.connection.on('error', err => logger.error({ err }, '‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å MongoDB'));
mongoose.connection.on('disconnected', () => logger.warn('MongoDB –æ—Ç–∫–ª—é—á–µ–Ω–∞.'));


// --- –õ–æ–≥–∏–∫–∞ Telegram Bot ---

// üî•üî•üî• –í–û–¢ –û–ù, –§–ò–ù–ê–õ–¨–ù–´–ô –§–ò–ö–° üî•üî•üî•
bot.command('start', (ctx) => {
  if (!WEBAPP_URL) {
    return ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–∞–≥–∞–∑–∏–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');
  }
  // –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.
  // –ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞—é—Ç —à—Ç–æ—Ä–∫—É.
  ctx.reply(
    '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω" –≤ –º–µ–Ω—é.',
    { parse_mode: 'HTML' }
  );
});

bot.on("callback_query", async (ctx) => {
  const data = ctx.callbackQuery.data;
  if (!data.startsWith('status_')) return ctx.answerCbQuery();
  const parts = data.split("_");
  const orderId = parts[parts.length - 1]; 
  const newStatus = parts.slice(1, -1).join('_');

  try {
    if (!mongoose.Types.ObjectId.isValid(orderId)) return ctx.answerCbQuery('‚ùóÔ∏è –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π ID –∑–∞–∫–∞–∑–∞');
    const order = await Order.findById(orderId);
    if (!order) return ctx.answerCbQuery("‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ");
    order.status = newStatus;
    await order.save();
    const originalText = ctx.callbackQuery.message.text;
    const updatedText = originalText.replace(/\*–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:.*$/, `*–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${escapeMarkdown(statusLabels[newStatus] || newStatus)}*`);
    if (updatedText !== originalText) {
        await ctx.editMessageText(updatedText, { parse_mode: 'MarkdownV2', ...ctx.callbackQuery.message.reply_markup });
    }
    ctx.answerCbQuery(`‚úÖ –°—Ç–∞—Ç—É—Å: ${statusLabels[newStatus]}`);
  } catch (err) {
      logger.error({ err }, '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–ª–±—ç–∫–∞');
      ctx.answerCbQuery('‚ùóÔ∏è –û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
  }
});


// --- –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏ Graceful Shutdown ---
let server;
const shutdown = async (signal) => {
  logger.info(`${signal} received, shutting down gracefully`);
  bot.stop(signal);
  if (server) {
    server.close(async () => {
      logger.info('‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      await mongoose.connection.close(false);
      logger.info('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
      process.exit(0);
    });
  } else {
    process.exit(0);
  }
};
process.on('SIGTERM', () => shutdown('SIGTERM'));
process.on('SIGINT', () => shutdown('SIGINT'));

async function startServer() {
  try {
    logger.info("‚ÑπÔ∏è –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...");
    bot.botInfo = await bot.telegram.getMe();
    logger.info(`‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞: @${bot.botInfo.username}`);
    
    
    server = app.listen(3001, () => {
      logger.info("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:3001");
      logger.info("ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...");
      bot.launch();
    });
  } catch (err) {
    logger.error({ err }, "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞");
    process.exit(1);
  }
}

startServer();