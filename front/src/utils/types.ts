// types.ts

// –≠—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É —Ç–µ–±—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –æ—Å—Ç–∞–≤–ª—è–µ–º
export interface UserAddress {
  userId: number;
  city: string;
  city_code: string;
  street: string;
  name: string;
  phone:string;
  deliveryType: "pickup" | "address";
  pickupCode?: string;
  pickupAddress?: string;
}

// üî•üî•üî• –í–û–¢ –ì–õ–ê–í–ù–´–ô –§–ò–ö–° üî•üî•üî•
// –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–∫–∞–∑–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –±—ç–∫–µ–Ω–¥–æ–º
export interface Order {
  _id: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –æ—Ç MongoDB, –¥–ª—è React-–∫–ª—é—á–µ–π
  publicId: string; // –ù–∞—à –Ω–æ–≤—ã–π, –∫—Ä–∞—Å–∏–≤—ã–π, –ø—É–±–ª–∏—á–Ω—ã–π ID
  id?: string; // –°—Ç–∞—Ä—ã–π ID –¥–µ–ª–∞–µ–º –ù–ï–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ú (–¥–ª—è —Å—Ç–∞—Ä—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –±–∞–∑–µ)

  userId: number;
  username?: string;
  link: string;
  category: string;
  shipping: string;
  price: number;
  createdAt: string;
  
  // –ü—Ä–∏–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –±—ç–∫–µ–Ω–¥–æ–º
  status: 
    | 'pending'
    | 'awaiting_payment'
    | 'paid'
    | 'to_warehouse'
    | 'at_warehouse'
    | 'to_moscow'
    | 'in_moscow'
    | 'shipped_cdek'
    | 'ready_for_pickup'
    | 'completed'
    | 'rejected';
}

// –≠—Ç–æ—Ç —Ç–∏–ø —Ç–æ–∂–µ –≤ –ø–æ—Ä—è–¥–∫–µ, –æ—Å—Ç–∞–≤–ª—è–µ–º
export type CreateOrderPayload = {
  userId: number;
  username?: string;
  link: string;
  category: string;
  shipping: string;
  rawPoizonPrice: number;
  address: UserAddress;
};